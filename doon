#!/bin/bash
#
# doon [ add-node | rm-node | add-host | rm-host ]
#
# doon [ add-node ] <local ip> <remote ip>
# doon [ rm-node  ]
#
# doon [ add-host ] <mac> <ip> <port>
# doon [ rm-host  ] <mac> <ip> <port>
#
# TODO:
#   * first 8 ping packets gone, why?
#   * add/rm-tunnel
#   * do we need add-rm host then?
#   * show

SWITCH="doon"

function host_ops {
    MACADDR=$2
    IPADDR=$3
    PORT=$4
    VXLANID=100

    # FIXME
    VTEP_PORT=$(sudo ovs-ofctl show $SWITCH | grep vtep | cut -d'(' -f1)
    VTEP_PORT=10


    # ovswitch flow scheme:
    #
    # 0 - ACL
    #   dl_src valid; goto 1
    #   tun_id valid; goto 1
    #   drop
    # 1 - L2 local<->local, local<->vtep
    #   dl_dst valid, output
    #   arp target valid, output
    #   local in_port valid, set tun_id, output vtep
    #   goto 2
    # 2 - L2 vtep<->vtep
    #   vtep port valid, set tun_id, flood other vteps 

    declare -a flows_per_host=( \
        # ACL table
        "table=0,dl_src=$MACADDR,priority=10,actions=resubmit(,1)" \

        # L2 switching host->host, vtep->host
        "table=1,dl_dst=$MACADDR,priority=10,actions=output:$PORT" \
        "table=1,arp,nw_dst=$IPADDR,priority=10,actions=output:$PORT" \

        # L2 switching host->vtep
        "table=1,in_port=$PORT,priority=10,actions=set_field:$VXLANID->tun_id,output:$VTEP_PORT" \

        # leftovers, should be vtep->vtep
    )

    case $1 in
        add-host)
            OP="add-flow"
            FLOW_SPLIT=""
            ;;

        rm-host)
            OP="del-flows"
            FLOW_SPLIT="-F ,priority"
            ;;

        *)
            echo "Usage: FIXME"
            exit 1
    esac

    ## install flows
    for i in "${flows_per_host[@]}"
    do
        FLOW_STR=$(echo $i | awk $FLOW_SPLIT '{print $1}')

        #echo sudo ovs-ofctl $OP $SWITCH $FLOW_STR
        sudo ovs-ofctl $OP $SWITCH $FLOW_STR
    done
}


function node_ops {
    VXLANID="100"
    VXLANIFNAME="vtep-"$VXLANID"-0"
    LOCAL_IP=$2
    REMOTE_IP=$3
    TEPPORT=10

    declare -a flows_per_node=( \
        # ACL table
        "table=0,tun_id=$VXLANID,priority=10,actions=resubmit(,1)" \
        "table=0,priority=5,actions=drop" \

        # L2 switching host->host, vtep->host

        # L2 switching host->vtep

        # leftovers, should be vtep->vtep
        "table=1,priority=5,actions=drop" \
    )

    function switch_create {
        echo "Creating bridge $SWITCH"
        ovs-vsctl add-br $SWITCH
        # remove normal flow added automatically after add-br
        ovs-ofctl del-flows $SWITCH

        # set IP address, gateway
        ip addr add $LOCAL_IP dev $SWITCH 
        LOCAL_IP=$(ip addr show dev $SWITCH | grep "inet " | awk '{print $2}')
        DEFAULT_GW=$(ip route show default | grep default | awk '{print $3}')
        echo "Bridge interface $SWITCH @ $LOCAL_IP via $DEFAULT_GW"

        # create tunnel port
        echo "Adding VXLAN port $VXLANIFNAME to bridge $SWITCH"
        ovs-vsctl add-port $SWITCH $VXLANIFNAME -- set interface $VXLANIFNAME type=vxlan option:remote_ip=$REMOTE_IP option:key=flow ofport_request=$TEPPORT

        # create default switch flows
    #FIXME add vtep<->local flows
        MACADDR=$(ip link show dev $SWITCH | grep "link/ether" | awk '{print $2}')
        LOCAL_IP=$(ip addr show dev $SWITCH | grep "inet " | awk '{print $2}' | cut -d/ -f1)
       # ovs-ofctl add-flow $SWITCH "table=0,priority=10,dl_dst=$MACADDR,actions=output:LOCAL"
       # ovs-ofctl add-flow $SWITCH "table=0,priority=10,arp,nw_dst=$LOCAL_IP,actions=output:LOCAL"

        ## install flows
        for i in "${flows_per_node[@]}"
        do
            sudo ovs-ofctl add-flow $SWITCH $i
        done
    }

    function switch_destroy {
        # delete the switch
        echo "Deleting bridge $SWITCH"
        ovs-vsctl del-br $SWITCH
    }

case $1 in
    add-node)
        switch_create
        ;;

    rm-node)
        switch_destroy
        ;;

    *)
        echo "Usage: node [ create | destroy ] <interface> <remote ip>"
        exit 1
esac

}

case $1 in
    add-host | rm-host)
        host_ops $1 $2 $3 $4
        ;;

    add-node | rm-node)
        node_ops $1 $2 $3
        ;;

    *)
        echo "Usage: host [ connect | disconnect ] <mac> <ip> <port> <switch>"
        exit 1
esac


